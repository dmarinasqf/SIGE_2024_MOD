// <auto-generated />
using System;
using Erp.Persistencia.Modelos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Erp.Persistencia.Migrations
{
    [DbContext(typeof(Modelo))]
    partial class ModeloModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ENTIDADES.Almacen.AAccionFarmacologica", b =>
                {
                    b.Property<int>("idaccionfarma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idaccionfarma");

                    b.ToTable("AccionFarmacologica", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AAlmacen", b =>
                {
                    b.Property<int>("idalmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("idtipoproducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoalmacen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idalmacen");

                    b.ToTable("Almacen", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AAlmacenSucursal", b =>
                {
                    b.Property<int>("idalmacensucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacen")
                        .HasColumnType("int");

                    b.Property<int?>("idareaalmacen")
                        .HasColumnType("int");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idalmacensucursal");

                    b.ToTable("AlmacenSucursal", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AAreaAlmacen", b =>
                {
                    b.Property<int>("idareaalmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idareaalmacen");

                    b.ToTable("AreaAlmacen", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AClase", b =>
                {
                    b.Property<int>("idclase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idclase");

                    b.ToTable("Clase", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleAccionFarmacologica", b =>
                {
                    b.Property<int>("iddetalleaccionfarma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idaccionfarma")
                        .HasColumnType("int");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalleaccionfarma");

                    b.ToTable("DetalleAccionFarmacologica", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleGuiaEntrada", b =>
                {
                    b.Property<long>("iddetalleguiaentrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidadenviada")
                        .HasColumnType("int");

                    b.Property<int>("cantidadingresada")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idguiaentrada")
                        .HasColumnType("bigint");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalleguiaentrada");

                    b.ToTable("DetalleGuiaEntrada", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleGuiaSalida", b =>
                {
                    b.Property<long>("iddetalleguiasalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidadanterior")
                        .HasColumnType("int");

                    b.Property<int>("cantidadgenerada")
                        .HasColumnType("int");

                    b.Property<int>("cantidadpicking")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<long>("idguiasalida")
                        .HasColumnType("bigint");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalleguiasalida");

                    b.ToTable("DetalleGuiaSalida", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleIngresoManual", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<int>("idingreso")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long?>("idstock")
                        .HasColumnType("bigint");

                    b.Property<bool?>("isblister")
                        .HasColumnType("bit");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.HasIndex("idalmacensucursal");

                    b.HasIndex("idingreso");

                    b.HasIndex("idproducto");

                    b.HasIndex("idstock");

                    b.ToTable("DetalleIngresoManual", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetallePrincipioActivo", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codconcentracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idprincipio")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<int?>("idunidadmedida")
                        .HasColumnType("int");

                    b.HasKey("iddetalle");

                    b.HasIndex("idprincipio");

                    b.HasIndex("idproducto");

                    b.HasIndex("idunidadmedida");

                    b.ToTable("DetallePrincipioActivo", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleProductoGenerico", b =>
                {
                    b.Property<int>("iddetallegenerico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codconcentracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<int?>("idproductogenerico")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetallegenerico");

                    b.ToTable("DetalleProductoGenerico", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleSalidaManual", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idsalida")
                        .HasColumnType("int");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<bool?>("isblister")
                        .HasColumnType("bit");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.HasKey("iddetalle");

                    b.HasIndex("idsalida");

                    b.HasIndex("idstock");

                    b.ToTable("SalidaManualDetalle", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AEquivalencia", b =>
                {
                    b.Property<int>("idequivalencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("equivalencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("unidadmedidafinal")
                        .HasColumnType("int");

                    b.Property<int?>("unidadmedidainicial")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idequivalencia");

                    b.ToTable("Equivalencia", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AFabricante", b =>
                {
                    b.Property<int>("idfabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idfabricante");

                    b.ToTable("Fabricante", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AFormaFarmaceutica", b =>
                {
                    b.Property<int>("idformafarma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idformafarma");

                    b.ToTable("FormaFarmaceutica", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AGuiaEntrada", b =>
                {
                    b.Property<long>("idguiaentrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<string>("idempleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<long>("idguiasalida")
                        .HasColumnType("bigint");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idsucursalenvia")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idguiaentrada");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("GuiaEntrada", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AGuiaSalida", b =>
                {
                    b.Property<long>("idguiasalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoguia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechatraslado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacensucursaldestino")
                        .HasColumnType("int");

                    b.Property<int>("idalmacensucursalorigen")
                        .HasColumnType("int");

                    b.Property<int>("idcaja")
                        .HasColumnType("int");

                    b.Property<int>("idcorrelativo")
                        .HasColumnType("int");

                    b.Property<string>("idempleadoaudita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idempleadomantenimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("idempresatransporte")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idsucursaldestino")
                        .HasColumnType("int");

                    b.Property<int?>("idvehiculo")
                        .HasColumnType("int");

                    b.Property<string>("numdoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seriedoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idguiasalida");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("GuiaSalida", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AIngresoManual", b =>
                {
                    b.Property<int>("idingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idingreso");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("IngresoManual", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AIngresoTransferencia", b =>
                {
                    b.Property<long>("idingresotransferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("ano")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<string>("idempleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<long>("idsalidatransferencia")
                        .HasColumnType("bigint");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idsucursalenvia")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idingresotransferencia");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("IngresoTransferencia", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AIngresoTransferenciaDetalle", b =>
                {
                    b.Property<long>("idingresotransferenciadetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<long>("idingresotransferencia")
                        .HasColumnType("bigint");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idingresotransferenciadetalle");

                    b.ToTable("IngresoTransferenciaDetalle", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ALaboratorio", b =>
                {
                    b.Property<int>("idlaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlaboratorio");

                    b.ToTable("Laboratorio", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.APrincipioActivo", b =>
                {
                    b.Property<int>("idprincipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idprincipio");

                    b.ToTable("PrincipioActivo", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AProducto", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("aceptafechavence")
                        .HasColumnType("bit");

                    b.Property<bool?>("aceptalote")
                        .HasColumnType("bit");

                    b.Property<bool?>("aceptaregsanitario")
                        .HasColumnType("bit");

                    b.Property<string>("codigobarra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigodigemid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigodigemidgenerico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoproducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("concentracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("gradodistribucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idclase")
                        .HasColumnType("int");

                    b.Property<int?>("idequivalencia")
                        .HasColumnType("int");

                    b.Property<int?>("idformafarma")
                        .HasColumnType("int");

                    b.Property<int?>("idlaboratorio")
                        .HasColumnType("int");

                    b.Property<int?>("idpresentacion")
                        .HasColumnType("int");

                    b.Property<int?>("idsubclase")
                        .HasColumnType("int");

                    b.Property<int?>("idtemperatura")
                        .HasColumnType("int");

                    b.Property<string>("idtipoproducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idtipotributo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("igv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ingfarmaceutivoactivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("iscontrolado")
                        .HasColumnType("bit");

                    b.Property<bool?>("iscovid")
                        .HasColumnType("bit");

                    b.Property<bool?>("isesencial")
                        .HasColumnType("bit");

                    b.Property<bool?>("isgenerico")
                        .HasColumnType("bit");

                    b.Property<bool?>("mostrarventas")
                        .HasColumnType("bit");

                    b.Property<int?>("multiplo")
                        .HasColumnType("int");

                    b.Property<int?>("multiploblister")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreabreviado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("pedirreceta")
                        .HasColumnType("bit");

                    b.Property<decimal?>("porcentajeganancia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("porcentajeigv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioxblister")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioxfraccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("proteccionhumedad")
                        .HasColumnType("bit");

                    b.Property<bool?>("proteccionluz")
                        .HasColumnType("bit");

                    b.Property<decimal?>("pvf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pvfp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("uma")
                        .HasColumnType("int");

                    b.Property<int?>("umc")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("venderblister")
                        .HasColumnType("bit");

                    b.Property<decimal?>("vvf")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idproducto");

                    b.HasIndex("idformafarma");

                    b.HasIndex("idtipotributo");

                    b.ToTable("Producto", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AProductoDigemid", b =>
                {
                    b.Property<string>("codigodigemid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("concentracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechavenregsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("forma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formasimplificada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fraccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("laboratorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codigodigemid");

                    b.ToTable("ProductoDigemid", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AProductoPresentacion", b =>
                {
                    b.Property<int>("idpresentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpresentacion");

                    b.ToTable("ProductoPresentacion", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ARegistroSanitario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechainicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("registro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idproducto");

                    b.ToTable("RegistroSanitario", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASalidaManual", b =>
                {
                    b.Property<int>("idsalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idsalida");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("SalidaManual", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASalidaTransferencia", b =>
                {
                    b.Property<long>("idsalidatransferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("ano")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoguia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechatraslado")
                        .HasColumnType("datetime2");

                    b.Property<int>("idalmacensucursalorigen")
                        .HasColumnType("int");

                    b.Property<int?>("idcajasucursal")
                        .HasColumnType("int");

                    b.Property<int?>("idcorrelativo")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("idempresatransporte")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idsucursaldestino")
                        .HasColumnType("int");

                    b.Property<int?>("idtipomovimiento")
                        .HasColumnType("int");

                    b.Property<int?>("idvehiculo")
                        .HasColumnType("int");

                    b.Property<string>("numdoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seriedoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idsalidatransferencia");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("SalidaTransferencia", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASalidaTransferenciaDetalle", b =>
                {
                    b.Property<long>("idsalidatransferenciadetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long>("idsalidatransferencia")
                        .HasColumnType("bigint");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idsalidatransferenciadetalle");

                    b.ToTable("SalidaTransferenciaDetalle", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AStockLoteProducto", b =>
                {
                    b.Property<long>("idstock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int?>("candisponible")
                        .HasColumnType("int");

                    b.Property<int?>("caningreso")
                        .HasColumnType("int");

                    b.Property<string>("edicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("idtabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("multiplo")
                        .HasColumnType("int");

                    b.Property<int?>("multiploblister")
                        .HasColumnType("int");

                    b.Property<string>("promocion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idstock");

                    b.HasIndex("idalmacensucursal");

                    b.HasIndex("idproducto");

                    b.ToTable("StockLoteProducto", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASubClase", b =>
                {
                    b.Property<int>("idsubclase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idclase")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idsubclase");

                    b.ToTable("SubClase", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ATemperatura", b =>
                {
                    b.Property<int>("idtemperatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtemperatura");

                    b.ToTable("Temperatura", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ATipoMovimiento", b =>
                {
                    b.Property<int>("idtipomovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipomovimiento");

                    b.ToTable("TipoMovimiento", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ATipoProducto", b =>
                {
                    b.Property<string>("idtipoproducto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipoproducto");

                    b.ToTable("TipoProducto", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AUnidadMedida", b =>
                {
                    b.Property<int>("idunidadmedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("abreviatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idunidadmedida");

                    b.ToTable("UnidadMedida", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.Kardex", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacen")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<string>("idtabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("multiplo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("stockactual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idalmacen");

                    b.HasIndex("idproducto");

                    b.HasIndex("idstock");

                    b.ToTable("Kardex", "Almacen");
                });

            modelBuilder.Entity("ENTIDADES.Finanzas.FBanco", b =>
                {
                    b.Property<int>("idbanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idbanco");

                    b.ToTable("Banco", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.Finanzas.FCondicionPago", b =>
                {
                    b.Property<int>("idcondicionpago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ndias")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcondicionpago");

                    b.ToTable("CondicionPago", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.Finanzas.FDocumentoTributario", b =>
                {
                    b.Property<int>("iddocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigosunat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correlativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddocumento");

                    b.ToTable("DocumentoTributario", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.Finanzas.FMoneda", b =>
                {
                    b.Property<int>("idmoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigosunat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("preciocompra")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("precioventa")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("simbolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("tipodecambio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idmoneda");

                    b.ToTable("Moneda", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.Finanzas.FTipoPago", b =>
                {
                    b.Property<int>("idtipopago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipopago");

                    b.ToTable("TipoPago", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Caja", b =>
                {
                    b.Property<int>("idcaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcaja");

                    b.ToTable("Caja");
                });

            modelBuilder.Entity("ENTIDADES.Generales.CajaSucursal", b =>
                {
                    b.Property<int>("idcajasucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("aperturado")
                        .HasColumnType("bit");

                    b.Property<bool?>("correlativoasociadoaotracaja")
                        .HasColumnType("bit");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcaja")
                        .HasColumnType("int");

                    b.Property<int?>("idcajacorrelativoasociado")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("ipimpresora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreimpresora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serieimpresora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcajasucursal");

                    b.HasIndex("idcaja");

                    b.HasIndex("idsucursal");

                    b.ToTable("CajaSucursal");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Cliente", b =>
                {
                    b.Property<int>("cliTercero_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apematerno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apepaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddistrito")
                        .HasColumnType("int");

                    b.Property<int?>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int?>("idprovincia")
                        .HasColumnType("int");

                    b.Property<string>("logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrecomercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cliTercero_codigo");

                    b.ToTable("CLIENTE_TERCERO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.ClienteAsociado", b =>
                {
                    b.Property<int>("idclienteasociado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("celularcontacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaatencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<int?>("idcondicionpago")
                        .HasColumnType("int");

                    b.Property<int?>("idmedico")
                        .HasColumnType("int");

                    b.Property<int?>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("telefonocontacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idclienteasociado");

                    b.HasIndex("idmedico");

                    b.HasIndex("idsucursal");

                    b.ToTable("ClienteAsociado");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Constante", b =>
                {
                    b.Property<string>("idconstante")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idconstante");

                    b.ToTable("Constante");
                });

            modelBuilder.Entity("ENTIDADES.Generales.CorrelativoDocumento", b =>
                {
                    b.Property<int>("idcorrelativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("actual")
                        .HasColumnType("int");

                    b.Property<int?>("empieza")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcajasucursal")
                        .HasColumnType("int");

                    b.Property<int>("iddocumento")
                        .HasColumnType("int");

                    b.Property<string>("serie")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("termina")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcorrelativo");

                    b.HasIndex("idcajasucursal");

                    b.HasIndex("iddocumento");

                    b.ToTable("CorrelativoDocumento");
                });

            modelBuilder.Entity("ENTIDADES.Generales.DEPARTAMENTO", b =>
                {
                    b.Property<int>("dep_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dep_codigo");

                    b.ToTable("DEPARTAMENTO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.DISTRITO", b =>
                {
                    b.Property<int>("dis_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pro_codigo")
                        .HasColumnType("int");

                    b.HasKey("dis_codigo");

                    b.ToTable("DISTRITO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Diagnostico", b =>
                {
                    b.Property<int>("iddiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("diagnostico_codigo")
                        .UseIdentityColumn();

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddiagnostico");

                    b.ToTable("DIAGNOSTICO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.DocumentoPersonal", b =>
                {
                    b.Property<int>("TDC_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigosunat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TDC_codigo");

                    b.ToTable("TIPODOCUMENTOCLIENTE");
                });

            modelBuilder.Entity("ENTIDADES.Generales.EMPLEADO", b =>
                {
                    b.Property<int>("emp_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apeMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apePaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idgrupo")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perfil_codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("permitirDescuentoTeste")
                        .HasColumnType("bit");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("emp_codigo");

                    b.HasIndex("suc_codigo");

                    b.ToTable("EMPLEADO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Empresa", b =>
                {
                    b.Property<int>("idempresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codestablecimientosunat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoubigeo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correlativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("iddistrito")
                        .HasColumnType("int");

                    b.Property<int?>("idprovincia")
                        .HasColumnType("int");

                    b.Property<int?>("idsucursalalmacen")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrecomercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paginaweb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idempresa");

                    b.HasIndex("iddepartamento");

                    b.HasIndex("iddistrito");

                    b.HasIndex("idprovincia");

                    b.HasIndex("idsucursalalmacen");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("ENTIDADES.Generales.EspecialidadMedico", b =>
                {
                    b.Property<int>("esp_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("esp_codigo");

                    b.ToTable("ESPECIALIDAD");
                });

            modelBuilder.Entity("ENTIDADES.Generales.LugarSucursal", b =>
                {
                    b.Property<int>("idlugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlugar");

                    b.ToTable("LugarSucursal");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Medico", b =>
                {
                    b.Property<int>("med_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apeMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apePaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("asociadoQF")
                        .HasColumnType("bit");

                    b.Property<bool?>("checkms")
                        .HasColumnType("bit");

                    b.Property<bool?>("checktercero")
                        .HasColumnType("bit");

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clavezoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("comisionfm1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("comisionfm2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("comisionprocedimiento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("comisionpt1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("convenio")
                        .HasColumnType("bit");

                    b.Property<double?>("costoLima")
                        .HasColumnType("float");

                    b.Property<double?>("costoProvincia")
                        .HasColumnType("float");

                    b.Property<decimal?>("costoteleconsulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionconsultorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("esp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("especializado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("fotofirma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotomedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idcolegio")
                        .HasColumnType("int");

                    b.Property<int?>("iddepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("iddistrito")
                        .HasColumnType("int");

                    b.Property<int?>("idorigen1")
                        .HasColumnType("int");

                    b.Property<int?>("idorigen2")
                        .HasColumnType("int");

                    b.Property<int?>("idorigen3")
                        .HasColumnType("int");

                    b.Property<int?>("idprovincia")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nroColegiatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("teleconsulta")
                        .HasColumnType("bit");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariozoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoomapikey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoomapisecret")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("med_codigo");

                    b.HasIndex("esp_codigo");

                    b.ToTable("MEDICO");
                });

            modelBuilder.Entity("ENTIDADES.Generales.OrigenReceta", b =>
                {
                    b.Property<int>("idorigenreceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("origenreceta_codigo")
                        .UseIdentityColumn();

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dis_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("pro_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("tipoorigen_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idorigenreceta");

                    b.ToTable("OrigenReceta");
                });

            modelBuilder.Entity("ENTIDADES.Generales.PROVINCIA", b =>
                {
                    b.Property<int>("pro_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pro_codigo");

                    b.ToTable("PROVINCIA");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Paciente", b =>
                {
                    b.Property<int>("cli_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("TDC_codigo")
                        .HasColumnType("int");

                    b.Property<string>("apeMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apePaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("celular2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clie_ruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("dis_codigo")
                        .HasColumnType("int");

                    b.Property<string>("dni_ce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechanacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int?>("idgrupo")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isempleado")
                        .HasColumnType("bit");

                    b.Property<string>("nombrecomercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numdocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pro_codigo")
                        .HasColumnType("int");

                    b.Property<string>("referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipocliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipopaciente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cli_codigo");

                    b.ToTable("PACIENTE");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Pais", b =>
                {
                    b.Property<int>("idpais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("ENTIDADES.Generales.SUCURSAL", b =>
                {
                    b.Property<int>("suc_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CQFP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coddigemid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigoestablecimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("gerenteSucursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idadesy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("iddepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("iddistrito")
                        .HasColumnType("int");

                    b.Property<int?>("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("idlugar")
                        .HasColumnType("int");

                    b.Property<int?>("idprovincia")
                        .HasColumnType("int");

                    b.Property<string>("impresora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isprimario")
                        .HasColumnType("bit");

                    b.Property<bool?>("issucursalentrega")
                        .HasColumnType("bit");

                    b.Property<int>("labasignado")
                        .HasColumnType("int");

                    b.Property<int?>("nConsultorios")
                        .HasColumnType("int");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoSucursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoem_codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("suc_codigo");

                    b.HasIndex("iddepartamento");

                    b.HasIndex("iddistrito");

                    b.HasIndex("idprovincia");

                    b.ToTable("SUCURSAL");
                });

            modelBuilder.Entity("ENTIDADES.Generales.SucursalLaboratorio", b =>
                {
                    b.Property<int>("idsucursallab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idlaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idsucursallab");

                    b.ToTable("SucursalLaboratorio");
                });

            modelBuilder.Entity("ENTIDADES.Generales.TipoPaciente", b =>
                {
                    b.Property<int>("idtipopaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipopaciente_codigo")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipopaciente");

                    b.ToTable("TIPOPACIENTE");
                });

            modelBuilder.Entity("ENTIDADES.Identity.AppRol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grupo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APPROL");
                });

            modelBuilder.Entity("ENTIDADES.Transporte.TConductor", b =>
                {
                    b.Property<int>("idconductor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documentoidentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechanacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("idvehiculo")
                        .HasColumnType("int");

                    b.Property<string>("licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipolicencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idconductor");

                    b.ToTable("Conductor", "Transporte");
                });

            modelBuilder.Entity("ENTIDADES.Transporte.TEmpresa", b =>
                {
                    b.Property<int>("idempresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccionfiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("razonsocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idempresa");

                    b.ToTable("Empresa", "Transporte");
                });

            modelBuilder.Entity("ENTIDADES.Transporte.TVehiculo", b =>
                {
                    b.Property<int>("idvehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documentoidentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<string>("licencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelocarro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipolicencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idvehiculo");

                    b.ToTable("Vehiculo", "Transporte");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.ArticuloProcedimiento", b =>
                {
                    b.Property<int>("articulo_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigoproducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("stock")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadmedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("articulo_codigo");

                    b.ToTable("ARTICULO");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.DetalleProcedimiento", b =>
                {
                    b.Property<int>("detalleproc_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("costo")
                        .HasColumnType("float");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("procedimiento_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("tipodeproc_codido")
                        .HasColumnType("int");

                    b.HasKey("detalleproc_codigo");

                    b.HasIndex("tipodeproc_codido");

                    b.ToTable("DETALLE_PROCEDIMIENTO");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.DetalleProcedimientoArticulo", b =>
                {
                    b.Property<int>("procarticulo_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("articulo_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("detalleproc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("procarticulo_codigo");

                    b.HasIndex("articulo_codigo");

                    b.ToTable("DETALLEPROCEDIMIENTOARTICULO");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.Procedimiento", b =>
                {
                    b.Property<int>("procedimiento_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cli_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("med_codigo")
                        .HasColumnType("int");

                    b.Property<string>("numDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("procedimiento_codigo");

                    b.ToTable("PROCEDIMIENTO");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.TipoDeProcedimiento", b =>
                {
                    b.Property<int>("tipodeproc_codido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("costo")
                        .HasColumnType("float");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.HasKey("tipodeproc_codido");

                    b.ToTable("TIPODEPROCEDIMIENTO");
                });

            modelBuilder.Entity("ENTIDADES.comercial.Descuento", b =>
                {
                    b.Property<int>("iddescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descuentopara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechainicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idprolab")
                        .HasColumnType("int");

                    b.Property<string>("tipodescuento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariovalida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddescuento");

                    b.ToTable("Descuento", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.DescuentoDetalle", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddescuento")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.ToTable("DescuentoDetalle", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.DescuentoSucursal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("iddescuento")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("DescuentoSucursal", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.DetalleOferta", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idoferta")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("iddetalle");

                    b.HasIndex("idoferta");

                    b.HasIndex("idproducto");

                    b.ToTable("DetalleOferta", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.Incentivo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechafin")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("fechainicio")
                        .HasColumnType("Date");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<decimal?>("incentivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("incentivoxfraccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Incentivo", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ListaDescuento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("desproveedor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("dessucursal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("iddetalle")
                        .HasColumnType("int");

                    b.Property<int>("idlista")
                        .HasColumnType("int");

                    b.Property<decimal?>("pventa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipodescuento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ListaDescuento", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ListaPrecios", b =>
                {
                    b.Property<int>("idlistaprecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlistaprecio");

                    b.ToTable("ListaPrecios", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ListaPreciosSucursal", b =>
                {
                    b.Property<int>("idlistasucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idlista")
                        .HasColumnType("int");

                    b.Property<int?>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlistasucursal");

                    b.HasIndex("idlista");

                    b.HasIndex("idsucursal");

                    b.ToTable("ListaPreciosSucursal", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ObsequioOferta", b =>
                {
                    b.Property<int>("idobsequio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idoferta")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.HasKey("idobsequio");

                    b.HasIndex("idoferta");

                    b.HasIndex("idproducto");

                    b.ToTable("ObsequioOferta", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.Oferta", b =>
                {
                    b.Property<int>("idoferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechainicio")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("grabarcosto0")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("reqcliente")
                        .HasColumnType("bit");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idoferta");

                    b.ToTable("Oferta", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.PreciosProducto", b =>
                {
                    b.Property<long>("idprecioproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal?>("descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idlistaprecio")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("incentivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("incentivoxfraccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioxblister")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioxfraccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idprecioproducto");

                    b.HasIndex("idlistaprecio");

                    b.HasIndex("idproducto");

                    b.ToTable("PreciosProducto", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.comercial.SucursalOferta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idoferta")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idoferta");

                    b.HasIndex("idsucursal");

                    b.ToTable("SucursalOferta", "Comercial");
                });

            modelBuilder.Entity("ENTIDADES.compras.ArchivoProveedor", b =>
                {
                    b.Property<int>("idarchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("archivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idarchivo");

                    b.HasIndex("idproveedor");

                    b.ToTable("ArchivoProveedor", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CBonificacionCotizacion", b =>
                {
                    b.Property<int>("idbonificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddetallecotizacion")
                        .HasColumnType("int");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("promocion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idbonificacion");

                    b.ToTable("BonificacionCotizacion", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CContactosProveedor", b =>
                {
                    b.Property<int>("idcontacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcontacto");

                    b.ToTable("ContactosProveedor", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CCotizacion", b =>
                {
                    b.Property<int>("idcotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ano")
                        .HasColumnType("int");

                    b.Property<decimal>("cambiomoneda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("codigocotizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codigoempresa")
                        .HasColumnType("int");

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechasistema")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idcondicionpago")
                        .HasColumnType("int");

                    b.Property<int?>("idcontacto")
                        .HasColumnType("int");

                    b.Property<string>("idicoterms")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("idmoneda")
                        .HasColumnType("int");

                    b.Property<int?>("idproveedor")
                        .HasColumnType("int");

                    b.Property<int?>("idrepresentante")
                        .HasColumnType("int");

                    b.Property<int?>("idtipocotizacion")
                        .HasColumnType("int");

                    b.Property<int?>("idtipopago")
                        .HasColumnType("int");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcotizacion");

                    b.HasIndex("codigoempresa");

                    b.HasIndex("idicoterms");

                    b.ToTable("Cotizacion", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CCotizacionDetalle", b =>
                {
                    b.Property<int>("iddetallecotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("bonificacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("des1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("des2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("des3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("des4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("des5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("equivalencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idcotizacion")
                        .HasColumnType("int");

                    b.Property<int?>("idlaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<int?>("idproductoproveedor")
                        .HasColumnType("int");

                    b.Property<int?>("iduma")
                        .HasColumnType("int");

                    b.Property<int?>("idump")
                        .HasColumnType("int");

                    b.Property<decimal?>("montofacturar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pvf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("vvf")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("iddetallecotizacion");

                    b.ToTable("CotizacionDetalle", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.COrdenCompra", b =>
                {
                    b.Property<int>("idordencompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ano")
                        .HasColumnType("int");

                    b.Property<decimal?>("cambiomoneda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("codigoorden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaaprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechautilizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idcondicionpago")
                        .HasColumnType("int");

                    b.Property<int?>("idcontacto")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<string>("idicoterms")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("idmoneda")
                        .HasColumnType("int");

                    b.Property<int?>("idproveedor")
                        .HasColumnType("int");

                    b.Property<int?>("idrepresentante")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idsucursaldestino")
                        .HasColumnType("int");

                    b.Property<int?>("idtipopago")
                        .HasColumnType("int");

                    b.Property<decimal?>("percepcion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("usuarioaprueba")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idordencompra");

                    b.HasIndex("idicoterms");

                    b.ToTable("OrdenCompra", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.COrdenDetalle", b =>
                {
                    b.Property<int>("idordendetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddetallecotizacion")
                        .HasColumnType("int");

                    b.Property<int>("idordencompra")
                        .HasColumnType("int");

                    b.HasKey("idordendetalle");

                    b.ToTable("DetalleOrdenCompra", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CProductoProveedor", b =>
                {
                    b.Property<int>("idproductoproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codproductoproveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idproductoproveedor");

                    b.ToTable("ProductoProveedor", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CProveedor", b =>
                {
                    b.Property<int>("idproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ctaproveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("des1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("direcciond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("habido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idbanco")
                        .HasColumnType("int");

                    b.Property<int?>("iddepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("iddistrito")
                        .HasColumnType("int");

                    b.Property<int?>("idmoneda")
                        .HasColumnType("int");

                    b.Property<int?>("idpais")
                        .HasColumnType("int");

                    b.Property<int?>("idprovincia")
                        .HasColumnType("int");

                    b.Property<string>("nombrecomercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("razonsocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefonod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idproveedor");

                    b.ToTable("Proveedor", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CProveedorLaboratorio", b =>
                {
                    b.Property<int>("idproveedorlab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idlaboratorio")
                        .HasColumnType("int");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idproveedorlab");

                    b.ToTable("ProveedorLaboratorio", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CRepresentanteLaboratorio", b =>
                {
                    b.Property<int>("idrepresentante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idlaboratorio")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idrepresentante");

                    b.ToTable("RepresentanteLaboratorio", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CTipoCotizacion", b =>
                {
                    b.Property<int>("idtipocotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipocotizacion");

                    b.ToTable("TipoCotizacion", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.compras.CuentaProveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("aba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adreesbeneficiary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bancointermedio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("beneficiary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuentaintermediario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionintermediario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idbanco")
                        .HasColumnType("int");

                    b.Property<int?>("idmoneda")
                        .HasColumnType("int");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("numcuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("swift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("swiftintermediario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idbanco");

                    b.HasIndex("idmoneda");

                    b.HasIndex("idproveedor");

                    b.ToTable("CuentaProveedor", "Compras");
                });

            modelBuilder.Entity("ENTIDADES.delivery.TipoEntrega", b =>
                {
                    b.Property<int>("idtipoentrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipoentrega");

                    b.ToTable("TipoEntrega", "Delivery");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FIcoterms", b =>
                {
                    b.Property<string>("idicoterms")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idicoterms");

                    b.ToTable("Icoterms", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FLineaCredito", b =>
                {
                    b.Property<int>("idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcondicionpago")
                        .HasColumnType("int");

                    b.Property<int>("idmoneda")
                        .HasColumnType("int");

                    b.Property<bool>("isbloqueado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("montoactual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcliente");

                    b.ToTable("LineaCredito", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FLineaCreditoCobroCliente", b =>
                {
                    b.Property<int>("idcobro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("idoperacion")
                        .HasColumnType("int");

                    b.Property<bool>("ispagado")
                        .HasColumnType("bit");

                    b.Property<string>("tabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcobro");

                    b.ToTable("LineaCreditoCobroCliente", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FLineaCreditoHistorial", b =>
                {
                    b.Property<int>("idhistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.Property<decimal?>("montoactual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("montoingresado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idhistorial");

                    b.ToTable("LineaCreditoHistorial", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FTipoDocumentoTributario", b =>
                {
                    b.Property<int>("idtipodocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigosunat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddocumento")
                        .HasColumnType("int");

                    b.HasKey("idtipodocumento");

                    b.HasIndex("iddocumento");

                    b.ToTable("TipoDocumentoTributario", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FTipoEgreso", b =>
                {
                    b.Property<int>("tipoegreso_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("asiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipoegreso_codigo");

                    b.ToTable("TIPO_EGRESO");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FTipoTarjeta", b =>
                {
                    b.Property<int>("idtipotarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipotarjeta");

                    b.ToTable("TipoTarjeta", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FTipoTributo", b =>
                {
                    b.Property<string>("idtipotributo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("codigoafectacionigv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ececodtributo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecenametributo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipotributo");

                    b.ToTable("TipoTributo", "Finanzas");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CAJACHICA", b =>
                {
                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<double?>("montodisponible")
                        .HasColumnType("float");

                    b.HasKey("suc_codigo");

                    b.ToTable("CAJACHICA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CATALAGOPRECIOS", b =>
                {
                    b.Property<int>("catalago_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("articulo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("categoriaPrecio_codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("codigoPrecio")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("estado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("catalago_codigo");

                    b.ToTable("CATALAGOPRECIOS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CATEGORIAPRECIO", b =>
                {
                    b.Property<string>("categoriaPrecio_codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("estado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("categoriaPrecio_codigo");

                    b.ToTable("CATEGORIAPRECIO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CONSULTAMEDICA", b =>
                {
                    b.Property<int>("cmed_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cli_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("med_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("tur_codigo")
                        .HasColumnType("int");

                    b.HasKey("cmed_codigo");

                    b.ToTable("CONSULTAMEDICA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CONSULTORIO", b =>
                {
                    b.Property<int>("consultorio_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("estado")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.HasKey("consultorio_codigo");

                    b.HasIndex("suc_codigo");

                    b.ToTable("CONSULTORIO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.DEPOSITOS", b =>
                {
                    b.Property<int>("deposito_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("deposito1")
                        .HasColumnType("float");

                    b.Property<double?>("deposito2")
                        .HasColumnType("float");

                    b.Property<double?>("deposito3")
                        .HasColumnType("float");

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechadeposito1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechadeposito2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechadeposito3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechasistema")
                        .HasColumnType("datetime2");

                    b.Property<string>("numdeposito")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("numdeposito1")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("numdeposito2")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("numdeposito3")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioedita")
                        .HasColumnType("int");

                    b.Property<double?>("ventaefectivo")
                        .HasColumnType("float");

                    b.HasKey("deposito_codigo");

                    b.ToTable("DEPOSITOS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.DETALLECAJACHICA", b =>
                {
                    b.Property<int>("idcajachica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<double?>("monto")
                        .HasColumnType("float");

                    b.Property<string>("noperacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("usuariocreo")
                        .HasColumnType("int");

                    b.Property<int?>("usuariomodifica")
                        .HasColumnType("int");

                    b.HasKey("idcajachica");

                    b.ToTable("DETALLECAJACHICA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.DIFICULTADFORMULA", b =>
                {
                    b.Property<int>("idDificultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("estado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("usuariocrea")
                        .HasColumnType("int");

                    b.Property<int?>("usuariomodifica")
                        .HasColumnType("int");

                    b.HasKey("idDificultad");

                    b.ToTable("DIFICULTADFORMULA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.HORARIO", b =>
                {
                    b.Property<int>("horario_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("consultorio_codigo")
                        .HasColumnType("int");

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("med_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("nmrConsultas")
                        .HasColumnType("int");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<int>("tur_codigo")
                        .HasColumnType("int");

                    b.HasKey("horario_codigo");

                    b.ToTable("HORARIO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.HORARIO_VISITA_MEDICOS", b =>
                {
                    b.Property<int>("hvm_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("med_codigo")
                        .HasColumnType("int");

                    b.Property<int>("objrepm_codigo")
                        .HasColumnType("int");

                    b.Property<int>("tur_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuarioCreo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuarioModifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hvm_codigo");

                    b.ToTable("HORARIO_VISITA_MEDICOS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.INGRESOS", b =>
                {
                    b.Property<int>("ingresos_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("adelantoayer")
                        .HasColumnType("float");

                    b.Property<double?>("adelantodia")
                        .HasColumnType("float");

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEditacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechasistema")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ingresoAMERICANEXPRESS")
                        .HasColumnType("float");

                    b.Property<double?>("ingresoDINNERSCLUB")
                        .HasColumnType("float");

                    b.Property<double?>("ingresoMASTERCARD")
                        .HasColumnType("float");

                    b.Property<double?>("ingresoVISANET")
                        .HasColumnType("float");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<double?>("totaltarjetas")
                        .HasColumnType("float");

                    b.Property<double?>("totalventas")
                        .HasColumnType("float");

                    b.Property<int?>("usuarioedita")
                        .HasColumnType("int");

                    b.Property<double?>("ventaacredito")
                        .HasColumnType("float");

                    b.Property<double?>("ventaefectivo")
                        .HasColumnType("float");

                    b.HasKey("ingresos_codigo");

                    b.HasIndex("emp_codigo");

                    b.HasIndex("suc_codigo");

                    b.ToTable("INGRESOS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.LIBRORECETAS", b =>
                {
                    b.Property<int>("idlibrorecetas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cliTercero_codigo")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("detp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("orden")
                        .HasColumnType("int");

                    b.Property<string>("registro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlibrorecetas");

                    b.ToTable("LIBRORECETAS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.LIBRORECETASLABORATORIO", b =>
                {
                    b.Property<int>("idlibrolaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechamodificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idlibrorecetas")
                        .HasColumnType("int");

                    b.Property<int?>("lab_codigo")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlibrolaboratorio");

                    b.ToTable("LIBRORECETASLABORATORIO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.LISTAPRECIOSUCURSAL", b =>
                {
                    b.Property<int>("listasucursal_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categoriaprecio_codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("estado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.HasKey("listasucursal_codigo");

                    b.ToTable("LISTAPRECIOSUCURSAL");
                });

            modelBuilder.Entity("ENTIDADES.gdp.MEDICOESPECIALIDAD", b =>
                {
                    b.Property<int>("mede_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("esp_codigo")
                        .HasColumnType("int");

                    b.Property<int>("med_codigo")
                        .HasColumnType("int");

                    b.HasKey("mede_codigo");

                    b.ToTable("MEDICOESPECIALIDAD");
                });

            modelBuilder.Entity("ENTIDADES.gdp.MOVIMIENTO", b =>
                {
                    b.Property<int>("mov_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("dis_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("motivoeliminacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("motivomodificado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("observacion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("pro_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("tipomovimiento")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int?>("usuariomodifica")
                        .HasColumnType("int");

                    b.HasKey("mov_codigo");

                    b.ToTable("MOVIMIENTO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.OBJETIVOS_REPMED", b =>
                {
                    b.Property<int>("objrepm_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaVence")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("objrepm_codigo");

                    b.ToTable("OBJETIVOS_REPMED");
                });

            modelBuilder.Entity("ENTIDADES.gdp.ORIGENRECETA", b =>
                {
                    b.Property<int>("origenreceta_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("dep_codigo")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("dis_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("pro_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("tipoorigen_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("usuariocrea")
                        .HasColumnType("int");

                    b.Property<int?>("usuariomodifica")
                        .HasColumnType("int");

                    b.HasKey("origenreceta_codigo");

                    b.HasIndex("tipoorigen_codigo");

                    b.ToTable("ORIGENRECETA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.PAGOSPEDIDO", b =>
                {
                    b.Property<int>("idadelantopedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("idtipopago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("monto")
                        .HasColumnType("float");

                    b.Property<int>("pedido_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<string>("tipoadelanto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tiporegistro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idadelantopedido");

                    b.ToTable("PAGOSPEDIDO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.REPMEDICO_MED_ASIGNADOS", b =>
                {
                    b.Property<int>("rma_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("med_codigo")
                        .HasColumnType("int");

                    b.HasKey("rma_codigo");

                    b.ToTable("REPMEDICO_MED_ASIGNADOS");
                });

            modelBuilder.Entity("ENTIDADES.gdp.SUCURSALES_REPMEDICO", b =>
                {
                    b.Property<int>("sucurep_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.HasKey("sucurep_codigo");

                    b.HasIndex("suc_codigo");

                    b.ToTable("SUCURSALES_REPMEDICO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.SUCURSALES_SUPERVISOR", b =>
                {
                    b.Property<int>("sucusuper_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<int>("suc_codigo")
                        .HasColumnType("int");

                    b.HasKey("sucusuper_codigo");

                    b.HasIndex("suc_codigo");

                    b.ToTable("SUCURSALES_SUPERVISOR");
                });

            modelBuilder.Entity("ENTIDADES.gdp.TIPOPEDIDO", b =>
                {
                    b.Property<int>("tipopedido_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("desripcion")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipopedido_codigo");

                    b.ToTable("TIPOPEDIDO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.TIPO_EMPRESA", b =>
                {
                    b.Property<string>("tipoem_codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("tipoem_codigo");

                    b.ToTable("TIPO_EMPRESA");
                });

            modelBuilder.Entity("ENTIDADES.gdp.TIPO_ORIGEN", b =>
                {
                    b.Property<int>("tipoorigen_codigo")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("tipoorigen_codigo");

                    b.ToTable("TIPO_ORIGEN");
                });

            modelBuilder.Entity("ENTIDADES.gdp.TURNO", b =>
                {
                    b.Property<int>("tur_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("tur_codigo");

                    b.ToTable("TURNO");
                });

            modelBuilder.Entity("ENTIDADES.gdp.USUARIO", b =>
                {
                    b.Property<int>("emp_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("clave")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("usuario_name")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("emp_codigo");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.DetallePedido", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detp_codigo")
                        .UseIdentityColumn();

                    b.Property<int?>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("codigoPrecio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddificultad")
                        .HasColumnType("int");

                    b.Property<int?>("idpedido")
                        .HasColumnType("int")
                        .HasColumnName("pedido_codigo");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipoitem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.ToTable("DETALLE_PEDIDO");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.DevolucionPedido", b =>
                {
                    b.Property<int>("iddevolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("dev_codigo")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("fechaaceptacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechadevolucion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idpedido")
                        .HasColumnType("int")
                        .HasColumnName("pedido_codigo");

                    b.Property<string>("motivodevolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quimicoacepta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sucursalenvia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sucursalrecibe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariodevuelve")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddevolucion");

                    b.HasIndex("idpedido");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.EstadoPedido", b =>
                {
                    b.Property<string>("idestado")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idestado");

                    b.ToTable("EstadoPedido", "Pedidos");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.ImagenPedido", b =>
                {
                    b.Property<int>("idimagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("imagen_codigo")
                        .UseIdentityColumn();

                    b.Property<int>("idpedido")
                        .HasColumnType("int")
                        .HasColumnName("pedido_codigo");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idimagen");

                    b.HasIndex("idpedido");

                    b.ToTable("Imagen_Pedido", "Pedidos");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.Pedido", b =>
                {
                    b.Property<int>("idpedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pedido_codigo")
                        .UseIdentityColumn();

                    b.Property<string>("codpedido")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nroPedidoLocal");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaentregado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaproduccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechatransferencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("idcanalventas")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("canalventa");

                    b.Property<int?>("idcliente")
                        .HasColumnType("int")
                        .HasColumnName("cliTercero_codigo");

                    b.Property<int?>("iddiagnostico")
                        .HasColumnType("int")
                        .HasColumnName("diagnostico_codigo");

                    b.Property<string>("idestado")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("estadoPedido");

                    b.Property<int?>("idmedico")
                        .HasColumnType("int")
                        .HasColumnName("med_codigo");

                    b.Property<int?>("idorigenreceta")
                        .HasColumnType("int")
                        .HasColumnName("origenreceta_codigo");

                    b.Property<int?>("idpaciente")
                        .HasColumnType("int")
                        .HasColumnName("cli_codigo");

                    b.Property<int?>("idsucursal")
                        .HasColumnType("int")
                        .HasColumnName("suc_codigo");

                    b.Property<int?>("idtipoentrega")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("tipopedido_codigo");

                    b.Property<string>("idtipoformulacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("idtipopaciente")
                        .HasColumnType("int")
                        .HasColumnName("tipopaciente_codigo");

                    b.Property<int?>("idtipopedido")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("tipopedido_codigo");

                    b.Property<int?>("laboratorio")
                        .HasColumnType("int");

                    b.Property<int?>("laboratoriotransfiere")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ordenproduccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sucursalfactura")
                        .HasColumnType("int");

                    b.Property<string>("tiporegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuarioentrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariotransfiere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpedido");

                    b.HasIndex("idcanalventas");

                    b.HasIndex("idcliente");

                    b.HasIndex("iddiagnostico");

                    b.HasIndex("idestado");

                    b.HasIndex("idmedico");

                    b.HasIndex("idorigenreceta");

                    b.HasIndex("idpaciente");

                    b.HasIndex("idsucursal");

                    b.HasIndex("idtipoentrega");

                    b.HasIndex("idtipoformulacion");

                    b.HasIndex("idtipopaciente");

                    b.HasIndex("idtipopedido");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.TipoPedido", b =>
                {
                    b.Property<int>("idtipopedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipopedido_codigo")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipopedido");

                    b.ToTable("TipoPedido");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PICondicionEmbalaje", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddetallepreingreso")
                        .HasColumnType("int");

                    b.Property<string>("iditem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.HasIndex("iddetallepreingreso");

                    b.HasIndex("iditem");

                    b.ToTable("CondicionEmbalaje", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIControlCalidad", b =>
                {
                    b.Property<long>("idcontrolcalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.Property<string>("codigocontrolcalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idpreingreso")
                        .HasColumnType("int");

                    b.Property<int?>("idquimicofarmaceutico")
                        .HasColumnType("int");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcontrolcalidad");

                    b.ToTable("ControlCalidad", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIControlCalidadDetalle", b =>
                {
                    b.Property<long>("iddetallecontrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidadaprobada")
                        .HasColumnType("int");

                    b.Property<int>("cantidadmuestra")
                        .HasColumnType("int");

                    b.Property<int>("cantidadrechazada")
                        .HasColumnType("int");

                    b.Property<bool>("color")
                        .HasColumnType("bit");

                    b.Property<bool>("eiconformidadreqpro")
                        .HasColumnType("bit");

                    b.Property<bool>("eicontenidocompleto")
                        .HasColumnType("bit");

                    b.Property<bool>("eiidentificacion")
                        .HasColumnType("bit");

                    b.Property<bool>("eiintegridadlimpieza")
                        .HasColumnType("bit");

                    b.Property<bool>("eirotulado")
                        .HasColumnType("bit");

                    b.Property<bool>("eiseguridadsello")
                        .HasColumnType("bit");

                    b.Property<bool>("emconformidadreqpro")
                        .HasColumnType("bit");

                    b.Property<bool>("emcontenidocompleto")
                        .HasColumnType("bit");

                    b.Property<bool>("emidentificacion")
                        .HasColumnType("bit");

                    b.Property<bool>("emintegridadlimpieza")
                        .HasColumnType("bit");

                    b.Property<bool>("emrotulado")
                        .HasColumnType("bit");

                    b.Property<bool>("emseguridadsello")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("forma")
                        .HasColumnType("bit");

                    b.Property<long>("idcontrolcalidad")
                        .HasColumnType("bigint");

                    b.Property<int>("iddetallepreingreso")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<bool>("olor")
                        .HasColumnType("bit");

                    b.Property<int>("resultado")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetallecontrol");

                    b.ToTable("ControlCalidadDetalle", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIDetalleBonificacionFueraDocumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidadingresada")
                        .HasColumnType("int");

                    b.Property<int>("cantidadoc")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idcotizacionbonfi")
                        .HasColumnType("int");

                    b.Property<int?>("iddetallepreingreso")
                        .HasColumnType("int");

                    b.Property<int>("idfactura")
                        .HasColumnType("int");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("promocion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regsanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("iddetallepreingreso");

                    b.HasIndex("idfactura");

                    b.HasIndex("idproducto");

                    b.ToTable("DetalleBonificacionFueraDocumento", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIFacturaPreingreso", b =>
                {
                    b.Property<int>("idfactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaaprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int>("idpreingreso")
                        .HasColumnType("int");

                    b.Property<decimal?>("ncxdevolucion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ncxdiferenciadesc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("numdoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuarioaprueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idfactura");

                    b.HasIndex("iddocumento");

                    b.HasIndex("idpreingreso");

                    b.ToTable("FacturaPreingreso", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIGuiaDevolucion", b =>
                {
                    b.Property<int>("idguia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("idfactura")
                        .HasColumnType("int");

                    b.Property<int>("idpreingreso")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("numeroguia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idguia");

                    b.HasIndex("idfactura");

                    b.HasIndex("idpreingreso");

                    b.ToTable("GuiaDevolucion", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIGuiaDevolucionDetalle", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("iddetallepreingreso")
                        .HasColumnType("int");

                    b.Property<int>("idguia")
                        .HasColumnType("int");

                    b.Property<int?>("idproducto")
                        .HasColumnType("int");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<string>("motivodevolucion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.HasIndex("iddetallepreingreso");

                    b.HasIndex("idguia");

                    b.HasIndex("idproducto");

                    b.ToTable("GuiaDevolucionDetalle", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIItemCondicionEmbalaje", b =>
                {
                    b.Property<string>("iditem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("input")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iditem");

                    b.ToTable("ItemCondicionEmbalaje", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PILote", b =>
                {
                    b.Property<int>("idlote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechavencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("iddetallepreingreso")
                        .HasColumnType("int");

                    b.Property<string>("lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nprescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registrosanitario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vigencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idlote");

                    b.HasIndex("iddetallepreingreso");

                    b.ToTable("Lote", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIPreingreso", b =>
                {
                    b.Property<int>("idpreingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.Property<string>("codigopreingreso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("controlcalidad")
                        .HasColumnType("bit");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idalmacensucursal")
                        .HasColumnType("int");

                    b.Property<int>("idempleado")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("idordencompra")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quimico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("rechazadoporerror")
                        .HasColumnType("bit");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpreingreso");

                    b.HasIndex("idalmacensucursal");

                    b.ToTable("PreIngreso", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIPreingresoDetalle", b =>
                {
                    b.Property<int>("iddetallepreingreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("cantdevuelta")
                        .HasColumnType("int");

                    b.Property<int?>("cantfactura")
                        .HasColumnType("int");

                    b.Property<int?>("cantingresada")
                        .HasColumnType("int");

                    b.Property<int?>("cantoc")
                        .HasColumnType("int");

                    b.Property<decimal?>("costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("costoigv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idcotizacionbonfi")
                        .HasColumnType("int");

                    b.Property<int?>("iddetalle")
                        .HasColumnType("int");

                    b.Property<int?>("idfactura")
                        .HasColumnType("int");

                    b.Property<int>("idpreingreso")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("tabla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetallepreingreso");

                    b.HasIndex("idfactura");

                    b.ToTable("DetallePreIngreso", "Preingreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIRangoMuestraAO", b =>
                {
                    b.Property<int>("idrango")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("intervalofinal")
                        .HasColumnType("int");

                    b.Property<int>("intervaloinicial")
                        .HasColumnType("int");

                    b.Property<int>("numeromuestra")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idrango");

                    b.ToTable("RangoMuestraAO", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PITipoAnalisis", b =>
                {
                    b.Property<int>("idtipoanalisis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipoanalisis");

                    b.ToTable("TipoAnalisis", "PreIngreso");
                });

            modelBuilder.Entity("ENTIDADES.produccion.TipoFormulacion", b =>
                {
                    b.Property<string>("idtipoformulacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipoformulacion");

                    b.ToTable("TipoFormulacion", "Produccion");
                });

            modelBuilder.Entity("ENTIDADES.usuarios.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ENTIDADES.usuarios.Grupo", b =>
                {
                    b.Property<int>("idgrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idgrupo");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("ENTIDADES.usuarios.ModulosGrupo", b =>
                {
                    b.Property<int>("idmodulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("idgrupo")
                        .HasColumnType("int");

                    b.Property<string>("roleid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idmodulo");

                    b.ToTable("ModulosGrupo");
                });

            modelBuilder.Entity("ENTIDADES.ventas.AperturarCaja", b =>
                {
                    b.Property<int>("idaperturacaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechaapertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idcajasucursal")
                        .HasColumnType("int");

                    b.Property<decimal?>("montoinicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuarioapertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocierra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idaperturacaja");

                    b.HasIndex("idcajasucursal");

                    b.ToTable("AperturarCaja", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.CanalVenta", b =>
                {
                    b.Property<string>("idcanalventa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcanalventa");

                    b.ToTable("CanalVenta", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.CerrarCaja", b =>
                {
                    b.Property<int>("idcierre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("caja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("cambiomoneda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idaperturarcaja")
                        .HasColumnType("int");

                    b.Property<string>("moneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("montosistema")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("montousuario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("numventas")
                        .HasColumnType("int");

                    b.Property<string>("tipopago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idcierre");

                    b.HasIndex("idaperturarcaja");

                    b.ToTable("CerrarCaja", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.DetalleNotaCD", b =>
                {
                    b.Property<int>("iddetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idnota")
                        .HasColumnType("int");

                    b.Property<long?>("idprecioproducto")
                        .HasColumnType("bigint");

                    b.Property<long?>("idstock")
                        .HasColumnType("bigint");

                    b.Property<bool?>("isblister")
                        .HasColumnType("bit");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioigv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalle");

                    b.HasIndex("idnota");

                    b.HasIndex("idprecioproducto");

                    b.HasIndex("idstock");

                    b.ToTable("DetalleNotaCD", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.EgresoCaja", b =>
                {
                    b.Property<int>("egresos_codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("detallegastos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("emp_codigo")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechadocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idaperturacaja")
                        .HasColumnType("int");

                    b.Property<double?>("monto")
                        .HasColumnType("float");

                    b.Property<string>("numdocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("suc_codigo")
                        .HasColumnType("int");

                    b.Property<int?>("tipoegreso_codigo")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("egresos_codigo");

                    b.HasIndex("idaperturacaja");

                    b.HasIndex("suc_codigo");

                    b.HasIndex("tipoegreso_codigo");

                    b.ToTable("EGRESOS");
                });

            modelBuilder.Entity("ENTIDADES.ventas.NotaCD", b =>
                {
                    b.Property<int>("idnota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idaperturacaja")
                        .HasColumnType("int");

                    b.Property<int>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int?>("idempresa")
                        .HasColumnType("int");

                    b.Property<int?>("idsucursal")
                        .HasColumnType("int");

                    b.Property<int>("idtipodocumento")
                        .HasColumnType("int");

                    b.Property<long>("idventa")
                        .HasColumnType("bigint");

                    b.Property<string>("motivodevolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numdocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("txtgenerado")
                        .HasColumnType("bit");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idnota");

                    b.HasIndex("idaperturacaja");

                    b.HasIndex("iddocumento");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.HasIndex("idtipodocumento");

                    b.ToTable("NotaCD", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.Proforma", b =>
                {
                    b.Property<long>("idproforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("codigoproforma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idproforma");

                    b.HasIndex("idcliente");

                    b.HasIndex("idempresa");

                    b.HasIndex("idsucursal");

                    b.ToTable("Proforma", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.ProformaDetalle", b =>
                {
                    b.Property<long>("iddetalleproforma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("idprecioproducto")
                        .HasColumnType("bigint");

                    b.Property<long>("idproforma")
                        .HasColumnType("bigint");

                    b.Property<long>("idstock")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("incentivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("isblister")
                        .HasColumnType("bit");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioigv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddetalleproforma");

                    b.HasIndex("idprecioproducto");

                    b.HasIndex("idproforma");

                    b.HasIndex("idstock");

                    b.ToTable("ProformaDetalle", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.Venta", b =>
                {
                    b.Property<long>("idventa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("anuladopor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaanulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idaperturacaja")
                        .HasColumnType("int");

                    b.Property<int?>("idcliente")
                        .HasColumnType("int");

                    b.Property<int>("iddocumento")
                        .HasColumnType("int");

                    b.Property<int>("idempleado")
                        .HasColumnType("int");

                    b.Property<int>("idempresa")
                        .HasColumnType("int");

                    b.Property<long?>("idproforma")
                        .HasColumnType("bigint");

                    b.Property<int>("idsucursal")
                        .HasColumnType("int");

                    b.Property<bool?>("ismanual")
                        .HasColumnType("bit");

                    b.Property<string>("numdocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("textomoneda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("txtgenerado")
                        .HasColumnType("bit");

                    b.Property<string>("usuarioanula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idventa");

                    b.HasIndex("idaperturacaja");

                    b.HasIndex("idcliente");

                    b.HasIndex("iddocumento");

                    b.HasIndex("idempleado");

                    b.HasIndex("idempresa");

                    b.HasIndex("idproforma");

                    b.HasIndex("idsucursal");

                    b.ToTable("Venta", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.VentaDetalle", b =>
                {
                    b.Property<long>("idventadetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idlistadescuento")
                        .HasColumnType("int");

                    b.Property<long?>("idprecioproducto")
                        .HasColumnType("bigint");

                    b.Property<long?>("idstock")
                        .HasColumnType("bigint");

                    b.Property<long>("idventa")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("incentivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("isblister")
                        .HasColumnType("bit");

                    b.Property<bool?>("isfraccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("precioigv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idventadetalle");

                    b.HasIndex("idprecioproducto");

                    b.HasIndex("idstock");

                    b.HasIndex("idventa");

                    b.ToTable("VentaDetalle", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.ventas.VentaPagos", b =>
                {
                    b.Property<int>("idpago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("cambiomoneda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fechacreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaedicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idmoneda")
                        .HasColumnType("int");

                    b.Property<int?>("idtipopago")
                        .HasColumnType("int");

                    b.Property<int?>("idtipotarjeta")
                        .HasColumnType("int");

                    b.Property<long>("idventa")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("montodevuelto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("montopagado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("montosaldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("numtarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("usuariocrea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuariomodifica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpago");

                    b.HasIndex("idmoneda");

                    b.HasIndex("idtipopago");

                    b.HasIndex("idtipotarjeta");

                    b.HasIndex("idventa");

                    b.ToTable("VentaPagos", "Ventas");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleIngresoManual", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AAlmacenSucursal", "objalmacen")
                        .WithMany()
                        .HasForeignKey("idalmacensucursal");

                    b.HasOne("ENTIDADES.Almacen.AIngresoManual", "ingreso")
                        .WithMany()
                        .HasForeignKey("idingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stockobj")
                        .WithMany()
                        .HasForeignKey("idstock");

                    b.Navigation("ingreso");

                    b.Navigation("objalmacen");

                    b.Navigation("producto");

                    b.Navigation("stockobj");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetallePrincipioActivo", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.APrincipioActivo", "principioobj")
                        .WithMany()
                        .HasForeignKey("idprincipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AUnidadMedida", "unidadmedida")
                        .WithMany()
                        .HasForeignKey("idunidadmedida");

                    b.Navigation("principioobj");

                    b.Navigation("producto");

                    b.Navigation("unidadmedida");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ADetalleSalidaManual", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.ASalidaManual", "salida")
                        .WithMany()
                        .HasForeignKey("idsalida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stockobj")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("salida");

                    b.Navigation("stockobj");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AGuiaEntrada", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AGuiaSalida", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AIngresoManual", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AIngresoTransferencia", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AProducto", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AFormaFarmaceutica", "formafarmaceutica")
                        .WithMany()
                        .HasForeignKey("idformafarma");

                    b.HasOne("ENTIDADES.finanzas.FTipoTributo", "tipotributo")
                        .WithMany()
                        .HasForeignKey("idtipotributo");

                    b.Navigation("formafarmaceutica");

                    b.Navigation("tipotributo");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ARegistroSanitario", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASalidaManual", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.ASalidaTransferencia", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.AStockLoteProducto", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AAlmacenSucursal", "almacensucursal")
                        .WithMany()
                        .HasForeignKey("idalmacensucursal");

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto");

                    b.Navigation("almacensucursal");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.Almacen.Kardex", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AAlmacenSucursal", "almacensucursal")
                        .WithMany()
                        .HasForeignKey("idalmacen");

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stocklote")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("almacensucursal");

                    b.Navigation("producto");

                    b.Navigation("stocklote");
                });

            modelBuilder.Entity("ENTIDADES.Generales.CajaSucursal", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Caja", "caja")
                        .WithMany()
                        .HasForeignKey("idcaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Generales.ClienteAsociado", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Medico", "medico")
                        .WithMany()
                        .HasForeignKey("idmedico");

                    b.HasOne("ENTIDADES.Generales.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("idsucursal");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal");

                    b.Navigation("cliente");

                    b.Navigation("medico");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Generales.CorrelativoDocumento", b =>
                {
                    b.HasOne("ENTIDADES.Generales.CajaSucursal", "cajasucursal")
                        .WithMany()
                        .HasForeignKey("idcajasucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Finanzas.FDocumentoTributario", "documentoTributario")
                        .WithMany()
                        .HasForeignKey("iddocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cajasucursal");

                    b.Navigation("documentoTributario");
                });

            modelBuilder.Entity("ENTIDADES.Generales.EMPLEADO", b =>
                {
                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Empresa", b =>
                {
                    b.HasOne("ENTIDADES.Generales.DEPARTAMENTO", "departamento")
                        .WithMany()
                        .HasForeignKey("iddepartamento");

                    b.HasOne("ENTIDADES.Generales.DISTRITO", "distrito")
                        .WithMany()
                        .HasForeignKey("iddistrito");

                    b.HasOne("ENTIDADES.Generales.PROVINCIA", "provincia")
                        .WithMany()
                        .HasForeignKey("idprovincia");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursalalmacen")
                        .WithMany()
                        .HasForeignKey("idsucursalalmacen");

                    b.Navigation("departamento");

                    b.Navigation("distrito");

                    b.Navigation("provincia");

                    b.Navigation("sucursalalmacen");
                });

            modelBuilder.Entity("ENTIDADES.Generales.Medico", b =>
                {
                    b.HasOne("ENTIDADES.Generales.EspecialidadMedico", "objEspecialidad")
                        .WithMany()
                        .HasForeignKey("esp_codigo");

                    b.Navigation("objEspecialidad");
                });

            modelBuilder.Entity("ENTIDADES.Generales.SUCURSAL", b =>
                {
                    b.HasOne("ENTIDADES.Generales.DEPARTAMENTO", "departamento")
                        .WithMany()
                        .HasForeignKey("iddepartamento");

                    b.HasOne("ENTIDADES.Generales.DISTRITO", "distrito")
                        .WithMany()
                        .HasForeignKey("iddistrito");

                    b.HasOne("ENTIDADES.Generales.PROVINCIA", "provincia")
                        .WithMany()
                        .HasForeignKey("idprovincia");

                    b.Navigation("departamento");

                    b.Navigation("distrito");

                    b.Navigation("provincia");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.DetalleProcedimiento", b =>
                {
                    b.HasOne("ENTIDADES.Vinali.TipoDeProcedimiento", "tipoProcedimiento")
                        .WithMany()
                        .HasForeignKey("tipodeproc_codido");

                    b.Navigation("tipoProcedimiento");
                });

            modelBuilder.Entity("ENTIDADES.Vinali.DetalleProcedimientoArticulo", b =>
                {
                    b.HasOne("ENTIDADES.Vinali.ArticuloProcedimiento", "articulo")
                        .WithMany()
                        .HasForeignKey("articulo_codigo");

                    b.Navigation("articulo");
                });

            modelBuilder.Entity("ENTIDADES.comercial.DetalleOferta", b =>
                {
                    b.HasOne("ENTIDADES.comercial.Oferta", "oferta")
                        .WithMany()
                        .HasForeignKey("idoferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("oferta");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ListaPreciosSucursal", b =>
                {
                    b.HasOne("ENTIDADES.comercial.ListaPrecios", "lista")
                        .WithMany()
                        .HasForeignKey("idlista");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal");

                    b.Navigation("lista");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.comercial.ObsequioOferta", b =>
                {
                    b.HasOne("ENTIDADES.comercial.Oferta", "oferta")
                        .WithMany()
                        .HasForeignKey("idoferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("oferta");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.comercial.PreciosProducto", b =>
                {
                    b.HasOne("ENTIDADES.comercial.ListaPrecios", "listaprecios")
                        .WithMany()
                        .HasForeignKey("idlistaprecio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("listaprecios");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.comercial.SucursalOferta", b =>
                {
                    b.HasOne("ENTIDADES.comercial.Oferta", "oferta")
                        .WithMany()
                        .HasForeignKey("idoferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("oferta");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.compras.ArchivoProveedor", b =>
                {
                    b.HasOne("ENTIDADES.compras.CProveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("idproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("ENTIDADES.compras.CCotizacion", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("codigoempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.finanzas.FIcoterms", "icoterms")
                        .WithMany()
                        .HasForeignKey("idicoterms");

                    b.Navigation("empresa");

                    b.Navigation("icoterms");
                });

            modelBuilder.Entity("ENTIDADES.compras.COrdenCompra", b =>
                {
                    b.HasOne("ENTIDADES.finanzas.FIcoterms", "icoterms")
                        .WithMany()
                        .HasForeignKey("idicoterms");

                    b.Navigation("icoterms");
                });

            modelBuilder.Entity("ENTIDADES.compras.CuentaProveedor", b =>
                {
                    b.HasOne("ENTIDADES.Finanzas.FBanco", "banco")
                        .WithMany()
                        .HasForeignKey("idbanco");

                    b.HasOne("ENTIDADES.Finanzas.FMoneda", "moneda")
                        .WithMany()
                        .HasForeignKey("idmoneda");

                    b.HasOne("ENTIDADES.compras.CProveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("idproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("banco");

                    b.Navigation("moneda");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("ENTIDADES.finanzas.FTipoDocumentoTributario", b =>
                {
                    b.HasOne("ENTIDADES.Finanzas.FDocumentoTributario", "documento")
                        .WithMany()
                        .HasForeignKey("iddocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("documento");
                });

            modelBuilder.Entity("ENTIDADES.gdp.CONSULTORIO", b =>
                {
                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.gdp.INGRESOS", b =>
                {
                    b.HasOne("ENTIDADES.Generales.EMPLEADO", "empleado")
                        .WithMany()
                        .HasForeignKey("emp_codigo");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo");

                    b.Navigation("empleado");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.gdp.ORIGENRECETA", b =>
                {
                    b.HasOne("ENTIDADES.gdp.TIPO_ORIGEN", "tipoOrigen")
                        .WithMany()
                        .HasForeignKey("tipoorigen_codigo");

                    b.Navigation("tipoOrigen");
                });

            modelBuilder.Entity("ENTIDADES.gdp.SUCURSALES_REPMEDICO", b =>
                {
                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.gdp.SUCURSALES_SUPERVISOR", b =>
                {
                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.DevolucionPedido", b =>
                {
                    b.HasOne("ENTIDADES.pedidos.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("idpedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.ImagenPedido", b =>
                {
                    b.HasOne("ENTIDADES.pedidos.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("idpedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("ENTIDADES.pedidos.Pedido", b =>
                {
                    b.HasOne("ENTIDADES.ventas.CanalVenta", "canalventa")
                        .WithMany()
                        .HasForeignKey("idcanalventas");

                    b.HasOne("ENTIDADES.Generales.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("idcliente");

                    b.HasOne("ENTIDADES.Generales.Diagnostico", "diagnostico")
                        .WithMany()
                        .HasForeignKey("iddiagnostico");

                    b.HasOne("ENTIDADES.pedidos.EstadoPedido", "estadopedido")
                        .WithMany()
                        .HasForeignKey("idestado");

                    b.HasOne("ENTIDADES.Generales.Medico", "medico")
                        .WithMany()
                        .HasForeignKey("idmedico");

                    b.HasOne("ENTIDADES.Generales.OrigenReceta", "origenreceta")
                        .WithMany()
                        .HasForeignKey("idorigenreceta");

                    b.HasOne("ENTIDADES.Generales.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("idpaciente");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal");

                    b.HasOne("ENTIDADES.delivery.TipoEntrega", "tipoentrega")
                        .WithMany()
                        .HasForeignKey("idtipoentrega");

                    b.HasOne("ENTIDADES.produccion.TipoFormulacion", "tipoformulacion")
                        .WithMany()
                        .HasForeignKey("idtipoformulacion");

                    b.HasOne("ENTIDADES.Generales.TipoPaciente", "tipopaciente")
                        .WithMany()
                        .HasForeignKey("idtipopaciente");

                    b.HasOne("ENTIDADES.pedidos.TipoPedido", "tipopedido")
                        .WithMany()
                        .HasForeignKey("idtipopedido");

                    b.Navigation("canalventa");

                    b.Navigation("cliente");

                    b.Navigation("diagnostico");

                    b.Navigation("estadopedido");

                    b.Navigation("medico");

                    b.Navigation("origenreceta");

                    b.Navigation("paciente");

                    b.Navigation("sucursal");

                    b.Navigation("tipoentrega");

                    b.Navigation("tipoformulacion");

                    b.Navigation("tipopaciente");

                    b.Navigation("tipopedido");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PICondicionEmbalaje", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIPreingresoDetalle", "detallepreingreso")
                        .WithMany()
                        .HasForeignKey("iddetallepreingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.preingreso.PIItemCondicionEmbalaje", "itemembalaje")
                        .WithMany()
                        .HasForeignKey("iditem");

                    b.Navigation("detallepreingreso");

                    b.Navigation("itemembalaje");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIDetalleBonificacionFueraDocumento", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIPreingresoDetalle", "detallepreingreso")
                        .WithMany()
                        .HasForeignKey("iddetallepreingreso");

                    b.HasOne("ENTIDADES.preingreso.PIFacturaPreingreso", "facturapreingreso")
                        .WithMany()
                        .HasForeignKey("idfactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto");

                    b.Navigation("detallepreingreso");

                    b.Navigation("facturapreingreso");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIFacturaPreingreso", b =>
                {
                    b.HasOne("ENTIDADES.Finanzas.FDocumentoTributario", "documento")
                        .WithMany()
                        .HasForeignKey("iddocumento");

                    b.HasOne("ENTIDADES.preingreso.PIPreingreso", "preingreso")
                        .WithMany()
                        .HasForeignKey("idpreingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("documento");

                    b.Navigation("preingreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIGuiaDevolucion", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIFacturaPreingreso", "factura")
                        .WithMany()
                        .HasForeignKey("idfactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.preingreso.PIPreingreso", "preingreso")
                        .WithMany()
                        .HasForeignKey("idpreingreso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("factura");

                    b.Navigation("preingreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIGuiaDevolucionDetalle", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIPreingresoDetalle", "detallepreingreso")
                        .WithMany()
                        .HasForeignKey("iddetallepreingreso");

                    b.HasOne("ENTIDADES.preingreso.PIGuiaDevolucion", "guiadevolucion")
                        .WithMany()
                        .HasForeignKey("idguia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AProducto", "producto")
                        .WithMany()
                        .HasForeignKey("idproducto");

                    b.Navigation("detallepreingreso");

                    b.Navigation("guiadevolucion");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PILote", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIPreingresoDetalle", "detallepreingreso")
                        .WithMany()
                        .HasForeignKey("iddetallepreingreso");

                    b.Navigation("detallepreingreso");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIPreingreso", b =>
                {
                    b.HasOne("ENTIDADES.Almacen.AAlmacenSucursal", "almacensucursal")
                        .WithMany()
                        .HasForeignKey("idalmacensucursal");

                    b.Navigation("almacensucursal");
                });

            modelBuilder.Entity("ENTIDADES.preingreso.PIPreingresoDetalle", b =>
                {
                    b.HasOne("ENTIDADES.preingreso.PIFacturaPreingreso", "factura")
                        .WithMany()
                        .HasForeignKey("idfactura");

                    b.Navigation("factura");
                });

            modelBuilder.Entity("ENTIDADES.ventas.AperturarCaja", b =>
                {
                    b.HasOne("ENTIDADES.Generales.CajaSucursal", "cajasucursal")
                        .WithMany()
                        .HasForeignKey("idcajasucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cajasucursal");
                });

            modelBuilder.Entity("ENTIDADES.ventas.CerrarCaja", b =>
                {
                    b.HasOne("ENTIDADES.ventas.AperturarCaja", "aperturarcaja")
                        .WithMany()
                        .HasForeignKey("idaperturarcaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aperturarcaja");
                });

            modelBuilder.Entity("ENTIDADES.ventas.DetalleNotaCD", b =>
                {
                    b.HasOne("ENTIDADES.ventas.NotaCD", "nota")
                        .WithMany()
                        .HasForeignKey("idnota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.comercial.PreciosProducto", "precioproducto")
                        .WithMany()
                        .HasForeignKey("idprecioproducto");

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stock")
                        .WithMany()
                        .HasForeignKey("idstock");

                    b.Navigation("nota");

                    b.Navigation("precioproducto");

                    b.Navigation("stock");
                });

            modelBuilder.Entity("ENTIDADES.ventas.EgresoCaja", b =>
                {
                    b.HasOne("ENTIDADES.ventas.AperturarCaja", "aperturacaja")
                        .WithMany()
                        .HasForeignKey("idaperturacaja");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("suc_codigo");

                    b.HasOne("ENTIDADES.finanzas.FTipoEgreso", "egreso")
                        .WithMany()
                        .HasForeignKey("tipoegreso_codigo");

                    b.Navigation("aperturacaja");

                    b.Navigation("egreso");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.ventas.NotaCD", b =>
                {
                    b.HasOne("ENTIDADES.ventas.AperturarCaja", "caja")
                        .WithMany()
                        .HasForeignKey("idaperturacaja");

                    b.HasOne("ENTIDADES.Finanzas.FDocumentoTributario", "documentotributario")
                        .WithMany()
                        .HasForeignKey("iddocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal");

                    b.HasOne("ENTIDADES.finanzas.FTipoDocumentoTributario", "tipodocumento")
                        .WithMany()
                        .HasForeignKey("idtipodocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");

                    b.Navigation("documentotributario");

                    b.Navigation("empresa");

                    b.Navigation("sucursal");

                    b.Navigation("tipodocumento");
                });

            modelBuilder.Entity("ENTIDADES.ventas.Proforma", b =>
                {
                    b.HasOne("ENTIDADES.Generales.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("idcliente");

                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("empresa");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.ventas.ProformaDetalle", b =>
                {
                    b.HasOne("ENTIDADES.comercial.PreciosProducto", "precioproducto")
                        .WithMany()
                        .HasForeignKey("idprecioproducto");

                    b.HasOne("ENTIDADES.ventas.Proforma", "proforma")
                        .WithMany()
                        .HasForeignKey("idproforma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stock")
                        .WithMany()
                        .HasForeignKey("idstock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("precioproducto");

                    b.Navigation("proforma");

                    b.Navigation("stock");
                });

            modelBuilder.Entity("ENTIDADES.ventas.Venta", b =>
                {
                    b.HasOne("ENTIDADES.ventas.AperturarCaja", "caja")
                        .WithMany()
                        .HasForeignKey("idaperturacaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("idcliente");

                    b.HasOne("ENTIDADES.Finanzas.FDocumentoTributario", "documentotributario")
                        .WithMany()
                        .HasForeignKey("iddocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.EMPLEADO", "empleado")
                        .WithMany()
                        .HasForeignKey("idempleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.Generales.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("idempresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTIDADES.ventas.Proforma", "proforma")
                        .WithMany()
                        .HasForeignKey("idproforma");

                    b.HasOne("ENTIDADES.Generales.SUCURSAL", "sucursal")
                        .WithMany()
                        .HasForeignKey("idsucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");

                    b.Navigation("cliente");

                    b.Navigation("documentotributario");

                    b.Navigation("empleado");

                    b.Navigation("empresa");

                    b.Navigation("proforma");

                    b.Navigation("sucursal");
                });

            modelBuilder.Entity("ENTIDADES.ventas.VentaDetalle", b =>
                {
                    b.HasOne("ENTIDADES.comercial.PreciosProducto", "precioproducto")
                        .WithMany()
                        .HasForeignKey("idprecioproducto");

                    b.HasOne("ENTIDADES.Almacen.AStockLoteProducto", "stock")
                        .WithMany()
                        .HasForeignKey("idstock");

                    b.HasOne("ENTIDADES.ventas.Venta", "venta")
                        .WithMany()
                        .HasForeignKey("idventa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("precioproducto");

                    b.Navigation("stock");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("ENTIDADES.ventas.VentaPagos", b =>
                {
                    b.HasOne("ENTIDADES.Finanzas.FMoneda", "moneda")
                        .WithMany()
                        .HasForeignKey("idmoneda");

                    b.HasOne("ENTIDADES.Finanzas.FTipoPago", "tipopago")
                        .WithMany()
                        .HasForeignKey("idtipopago");

                    b.HasOne("ENTIDADES.finanzas.FTipoTarjeta", "tipotarjeta")
                        .WithMany()
                        .HasForeignKey("idtipotarjeta");

                    b.HasOne("ENTIDADES.ventas.Venta", "venta")
                        .WithMany()
                        .HasForeignKey("idventa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moneda");

                    b.Navigation("tipopago");

                    b.Navigation("tipotarjeta");

                    b.Navigation("venta");
                });
#pragma warning restore 612, 618
        }
    }
}
